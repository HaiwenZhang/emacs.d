;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(gud-gud-gdb-history minibuffer-history buffer-name-history counsel-M-x-history ivy-history empty-history swiper-history file-name-history))
(setq gud-gud-gdb-history '("gdb --fullname mrsequential"))
(setq minibuffer-history '("face" "set"))
(setq buffer-name-history '("init-basic.el" "ini"))
(setq counsel-M-x-history '(#("^lsp" 0 4 (ivy-index 18)) "lsp" "lsp" #("^eshe" 0 5 (ivy-index 1)) "eshell" #("^res" 0 4 (ivy-index 1)) "restart-emacs" "eshell" "restart-emacs" "eshell" #("^es" 0 3 (ivy-index 1)) "eshell" "eshell" "eshell" "eshell" #("^esh" 0 4 (ivy-index 1)) "eshell" "eshell" "eshell" "eshell" "lsp" "lsp" "lsp" "lsp" "lsp" "lsp" "restart-emacs" "lsp" "restart-emacs" "restart-emacs" "restart-emacs" "restart-emacs" #("^package-" 0 9 (ivy-index 10)) "package-list-packages" "restart-emacs" "restart-emacs" "restart-emacs" "restart-emacs" "package-list-packages" #("^gud" 0 4 (ivy-index 0)) "gud-mode" "gud-gdb" #("^go-mode" 0 8 (ivy-index 2)) "go-mode" "go-mode-menu" "go-mode" #("^toggle-fram" 0 12 (ivy-index 0)) "toggle-frame-maximized" #("restart" 0 7 (ivy-index 1)) "restart-emacs" #("lsp" 0 3 (ivy-index 127)) #("eshe" 0 4 (ivy-index 1)) "eshell" "restart-emacs" "restart-emacs" "restart-emacs" "restart-emacs" #("rest" 0 4 (ivy-index 3)) "restart-emacs" "restart-emacs" #("lsp-go" 0 6 (ivy-index 0)) "lsp-goto-implementation" #("package-in" 0 10 (ivy-index 0)) "package-install" #("package-up" 0 10 (ivy-index 0)) "auto-package-update-now" "restart-emacs" #("latex-mode" 0 10 (ivy-index 2)) "TeX-latex-mode" "TeX-latex-mode"))
(setq ivy-history '(#("raft.go" 0 7 (ivy-index 1)) #("*lsp-log*" 0 9 (ivy-index 3)) #("init-startup.el" 0 15 (face ivy-virtual ivy-index 6)) #("init.el" 0 7 (ivy-index 1)) #("*gopls::stderr*" 0 15 (ivy-index 5)) #("*gopls*" 0 7 (ivy-index 4)) #("*Messages*" 0 10 (ivy-index 2)) #("init-lsp.el" 0 11 (face ivy-virtual ivy-index 3)) #("init-ui.el" 0 10 (ivy-index 6 face ivy-virtual)) #("ui" 0 2 (ivy-index 0)) #("init-better.el" 0 14 (ivy-index 6 face ivy-virtual)) #("*Warnings*" 0 10 (ivy-index 5)) #("*Compile-Log*" 0 13 (ivy-index 4)) #("*scratch*" 0 9 (ivy-index 3)) #("init-basic.el" 0 13 (ivy-index 1)) #("init-package.el" 0 15 (ivy-index 9 face ivy-virtual)) #("init-complete.el" 0 16 (face ivy-virtual ivy-index 4)) #("init-rust.el" 0 12 (ivy-index 4 face ivy-virtual)) #("mrcoordinator.go" 0 16 (ivy-index 1)) #("coordinator.go" 0 14 (ivy-index 1)) #("main.rs" 0 7 (ivy-index 1)) #("main.rs<variables>" 0 18 (ivy-index 1)) #("go-mode" 0 7 (ivy-index 1)) #("init-go.el" 0 10 (ivy-index 1))))
(setq swiper-history '("lead" "win" #("rotate" 0 6 (ivy-index 2)) #("   rotate           h 20210126.637 available  melpa  Rotate the layout of emacs " 0 1 (display "4086 " swiper-line-number 4086) 1 3 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 3 9 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Package" button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 9 20 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Package") 20 21 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Package" button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate") 21 22 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Package") 22 30 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20210126.637" 9 21 (font-lock-face default)) font-lock-face default) 30 34 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20210126.637" 9 21 (font-lock-face default)) display "…" font-lock-face default) 34 35 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Version") 35 44 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face default)) font-lock-face default) 44 45 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Status") 45 46 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Status" display (space :align-to 42)) 46 51 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa" 9 14 (font-lock-face paradox-archive-face)) font-lock-face paradox-archive-face) 51 52 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Archive") 52 53 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Description" help-echo #("Description:  Rotate the layout of emacs " 13 14 (display "" font-lock-face paradox-description-face) 14 40 (font-lock-face paradox-description-face) 40 41 (display "" font-lock-face paradox-description-face)) display "" font-lock-face paradox-description-face) 53 79 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Description" help-echo #("Description:  Rotate the layout of emacs " 13 14 (display "" font-lock-face paradox-description-face) 14 40 (font-lock-face paradox-description-face) 40 41 (display "" font-lock-face paradox-description-face)) font-lock-face paradox-description-face) 79 80 (tabulated-list-entry [#("rotate           h" 0 6 (button (t) category paradox-name-button font-lock-face paradox-name-face help-echo "Package: rotate" package-desc #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil)) 17 18 (button (t) category paradox-homepage-button font-lock-face paradox-homepage-button-face help-echo "Visit https://github.com/daichirata/emacs-rotate")) #("20210126.637" 0 12 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" Rotate the layout of emacs " 0 1 (font-lock-face paradox-description-face display "") 1 27 (font-lock-face paradox-description-face) 27 28 (font-lock-face paradox-description-face display ""))] tabulated-list-id #s(package-desc rotate (20210126 637) "Rotate the layout of emacs" nil single "melpa" nil ((:stars) (:commit . "4e9ac3ff800880bd9b705794ef0f7c99d72900a6") (:authors ("daichi.hirata <hirata.daichi at gmail.com>")) (:maintainer "daichi.hirata <hirata.daichi at gmail.com>") (:keywords "window" "layout") (:url . "https://github.com/daichirata/emacs-rotate")) nil) tabulated-list-column-name "Description" help-echo #("Description:  Rotate the layout of emacs " 13 14 (display "" font-lock-face paradox-description-face) 14 40 (font-lock-face paradox-description-face) 40 41 (display "" font-lock-face paradox-description-face)) display "" font-lock-face paradox-description-face)) "pair" "aw" "awesom" "awesome" #("company-t" 0 9 (ivy-index 0)) #("   company-tabnine  h 20210310.2247 available  melpa  A company-mode backend for TabNine " 0 1 (swiper-line-number 722 display "722  ") 1 3 (tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 3 18 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 18 20 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 20 21 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 21 22 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 22 30 (font-lock-face default help-echo #("Version: 20210310.2247" 9 22 (font-lock-face default)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 30 35 (font-lock-face default display "…" help-echo #("Version: 20210310.2247" 9 22 (font-lock-face default)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 35 36 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 36 45 (font-lock-face default help-echo #("Status: available" 8 17 (font-lock-face default)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 45 46 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 46 47 (display (space :align-to 42) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 47 52 (font-lock-face paradox-archive-face help-echo #("Archive: melpa" 9 14 (font-lock-face paradox-archive-face)) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 52 53 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 53 54 (font-lock-face paradox-description-face display "" help-echo #("Description:  A company-mode backend for TabNine " 13 14 (font-lock-face paradox-description-face display "") 14 48 (font-lock-face paradox-description-face) 48 49 (font-lock-face paradox-description-face display "")) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 54 88 (font-lock-face paradox-description-face help-echo #("Description:  A company-mode backend for TabNine " 13 14 (font-lock-face paradox-description-face display "") 14 48 (font-lock-face paradox-description-face) 48 49 (font-lock-face paradox-description-face display "")) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))]) 88 89 (font-lock-face paradox-description-face display "" help-echo #("Description:  A company-mode backend for TabNine " 13 14 (font-lock-face paradox-description-face display "") 14 48 (font-lock-face paradox-description-face) 48 49 (font-lock-face paradox-description-face display "")) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) tabulated-list-entry [#("company-tabnine  h" 0 15 (package-desc #s(package-desc company-tabnine (20210310 2247) "A company-mode backend for TabNine" ((emacs (25)) (company (0 9 3)) (cl-lib (0 5)) (dash (2 16 0)) (s (1 12 0)) (unicode-escape (1 1))) single "melpa" nil ((:stars) (:commit . "98e9e8b38b6ca289fbe265b0a7b62c7fe38ed0e2") (:authors ("Tommy Xiang" . "tommyx058@gmail.com")) (:maintainer "Tommy Xiang" . "tommyx058@gmail.com") (:keywords "convenience") (:url . "https://github.com/TommyX12/company-tabnine/")) nil) help-echo "Package: company-tabnine" font-lock-face paradox-name-face category paradox-name-button button (t)) 17 18 (help-echo "Visit https://github.com/TommyX12/company-tabnine/" font-lock-face paradox-homepage-button-face category paradox-homepage-button button (t))) #("20210310.2247" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face paradox-archive-face)) #(" A company-mode backend for TabNine " 0 1 (display "" font-lock-face paradox-description-face) 1 35 (font-lock-face paradox-description-face) 35 36 (display "" font-lock-face paradox-description-face))])) "avy" "avy" "avy" "avy" "ace-windo"))
(setq file-name-history '(#("/Users/haiwen/code/asd/asd.go" 0 29 (ivy-index 14)) #("/Users/haiwen/.emacs.d/lisp/init-startup.el" 0 43 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-consts.el" 0 42 (ivy-index 0)) #("/Users/haiwen/.emacs.d/init.el" 0 30 (ivy-index 1)) #("/Users/haiwen/.emacs.d/early-init.el" 0 36 (ivy-index 0)) #("/Users/haiwen/gitrepo/6.824/src/raft/raft.go" 0 44 (ivy-index 4)) #("/Users/haiwen/.emacs.d/lisp/init-lsp.el" 0 39 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-lisp.el" 0 40 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-basic.el" 0 41 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-ui.el" 0 38 (ivy-index 18)) #("/Users/haiwen/.emacs.d/lisp/init-better.el" 0 42 (ivy-index 4)) #("/Users/haiwen/.emacs.d/lisp/init-complete.el" 0 44 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-package.el" 0 43 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-company.el" 0 43 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-rust.el" 0 40 (ivy-index 16)) #("/Users/haiwen/gitrepo/6.824/src/main/mrcoordinator.go" 0 53 (ivy-index 7)) #("/Users/haiwen/.emacs.d/custom.el" 0 32 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-go.el" 0 38 (ivy-index 0)) #("/Users/haiwen/gitrepo/6.824/src/mr/coordinator.go" 0 49 (ivy-index 0)) #("/Users/haiwen/gitrepo/6.824/src/mr/rpc.go" 0 41 (ivy-index 3)) #("/Users/haiwen/code/go-learn/web-tutorial/main.go" 0 48 (ivy-index 0)) "~/.emacs.d/lisp/init-ui.el" #("/Users/haiwen/.emacs.d/lisp/init-edit.el" 0 40 (ivy-index 7)) #("/Users/haiwen/.emacs.d/lisp/init-ivy.el" 0 39 (ivy-index 10)) "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-ivy.el" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-basic.el" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-ui.el" #("/Users/haiwen/code/rust-learn/chapter04/ownership/src/main.rs" 0 61 (ivy-index 0)) #("/Users/haiwen/code/rust-learn/chapter02/function/src/main.rs" 0 60 (ivy-index 0)) #("/Users/haiwen/code/rust-learn/my_first_azul_app/src/main.rs" 0 59 (ivy-index 0)) #("/Users/haiwen/code/rust-learn/chapter02/variables/src/main.rs" 0 61 (ivy-index 2)) #("/Users/haiwen/code/go-learn/version.go" 0 38 (ivy-index 0)) #("/Users/haiwen/Desktop/" 0 22 (ivy-index 0)) #("/Users/haiwen/.emacs.d/lisp/init-latex.el" 0 41 (ivy-index 0)) #("/Users/haiwen/gitrepo/AuroraBackend/flask_app/api/eye_diagram/aurora/post_proc/eye_diagram.py" 0 93 (ivy-index 3)) #("/Users/haiwen/gitrepo/AuroraBackend/flask_app/api/eye_diagram/ddr_eye.py" 0 72 (ivy-index 3)) #("/Users/haiwen/gitrepo/emacs.d/lisp/init-projectile.el" 0 53 (ivy-index 0)) #("/Users/haiwen/gitrepo/emacs.d/init.el" 0 37 (ivy-index 12)) #("/Users/haiwen/.emacs.d/lisp/init-hydra.el" 0 41 (ivy-index 0)) "~/.emacs.d/init.el" "~/.emacs.d/early-init.el" "~/code/delay_caculator/demo.py" "~/.emacs.d/lisp/init-ivy.el"))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '("rotate" "company-t"))
(setq extended-command-history 'nil)
